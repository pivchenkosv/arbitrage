version: "3"
services:
  app:
    image: arbitrage-app
    container_name: arbitrage-web
    build:
      context: ""
      dockerfile: docker/Dockerfile
    depends_on:
      - redis
      - db
    ports:
      - 8080:80
    volumes:
      - .:/var/www
    links:
      - db
    environment:
      APP_ENV: ${APP_ENV}
      CONTAINER_ROLE: app
      CACHE_DRIVER: redis
      SESSION_DRIVER: redis
      QUEUE_DRIVER: redis
      REDIS_HOST: redis
      DB_CONNECTION: pgsql
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}

  scheduler:
    image: arbitrage-app
    container_name: arbitrage-scheduler
    depends_on:
      - app
    volumes:
      - .:/var/www
    environment:
      APP_ENV: local
      CONTAINER_ROLE: scheduler
      CACHE_DRIVER: redis
      SESSION_DRIVER: redis
      QUEUE_DRIVER: redis
      REDIS_HOST: redis

  queue:
    image: arbitrage-app
    container_name: arbitrage-queue
    depends_on:
      - app
    volumes:
      - .:/var/www
    environment:
      APP_ENV: local
      CONTAINER_ROLE: queue
      CACHE_DRIVER: redis
      SESSION_DRIVER: redis
      QUEUE_DRIVER: redis
      REDIS_HOST: redis

  redis:
    container_name: arbitrage-redis
    image: redis:4-alpine
    ports:
      - 16379:6379
    volumes:
      - redis:/data

  db:
    image: postgres:10
    container_name: arbitrage-postgres
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_DATABASE}
    ports:
      - 5432:5432
    volumes:
      - /var/lib/postgresql/data

volumes:
  redis:
    driver: "local"
